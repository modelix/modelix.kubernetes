
nameOverride: ""
fullnameOverride: ""

versions:
  modelix:
    workspaces: "0.5.0"
    core: "10.1.0-pr1190-817f4549"
    kubernetes: "0.3.1"
    vncBaseImage: "0.8.3"

imageTags:
  db: ""
  instancesManager: ""
  model: ""
  registry: ""
  oauth: ""
  proxy: ""
  keycloak: ""
  wsClient: ""
  wsManager: ""
  wsJob: ""

modelStorageSize: 3000Mi

# Maximal size of request body in mebibyte for ingress and proxy.
# Especially relevant for uploads in the workspace manager.
maxBodySize: 200

developmentMode: false

keycloak:
  adminPassword: "modelix"
  realm: "modelix"
  clientId: "modelix"
  clientSecret: ""
  loglevel: "warn"
  debug: false

workspaces:
  enabled: true
  uploadsStorageSize: 5000Mi
  manager:
    memory: 600Mi
  client:
    # Ports as numbers which should be exposed from MPS.
    #
    # A use case is exposing custom servers running inside MPS.
    customExposedPorts: []

ingress:
  installController: true
  hostname: "localhost"
  port: ""
  certSecret: ""
  tls:
    crt: ""
    key: ""

certmanager:
  # Setting this to true requires that appropriate cert-manager CRDs are
  # installed before as described here:
  # https://cert-manager.io/docs/installation/helm/#option-1-installing-crds-with-kubectl
  enabled: false

db:
  useGCloud: false
  user: "modelix"
  password: "modelix"
  db: "modelix"
  storage: 3000Mi

dockerProxy:
  prefix: ""
  secret: ""
  secret64: ""
  caCertificate: ""

internalDockerRegistry:
  # The internal docker registry does not use HTTPS.
  # Kubernetes only allows pulling images from such insecure repositories when they run on localhost.
  # Therefore, the internal docker registry is exposed through NodePort on each cluster node.
  # The node port on which it is exposed needs
  # to be known in advance because we need to specify the address for authentication.
  # The node port is configurable to allow
  # changing it in deployments where it conflicts with other statically assigned node ports.
  nodePort: 30033

serviceAccount: ""

authorization:
  enabled: true
