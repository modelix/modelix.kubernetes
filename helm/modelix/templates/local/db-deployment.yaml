{{- if not .Values.db.useGCloud }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: db
    {{- include "modelix.labels" . | nindent 4 }}
  name: "{{ include "modelix.fullname" . }}-db"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      component: db
      {{- include "modelix.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        component: db
        {{- include "modelix.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          value: "{{ .Values.db.password }}"
        - name: POSTGRES_USER
          value: "{{ .Values.db.user }}"
        - name: POSTGRES_DB
          value: "{{ .Values.db.db }}"
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        image: "{{ .Values.dockerProxy.prefix }}{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
        imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
        name: db
        resources:
          requests:
            memory: "500Mi"
            cpu: "0.1"
          limits:
            memory: "500Mi"
            cpu: "1.0"
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: db-data
          - name: initdb
            mountPath: /docker-entrypoint-initdb.d/initdb.sql
      volumes:
      - name: initdb
        configMap:
          name: "{{ include "modelix.fullname" . }}-initdb"
      - name: db-data
        persistentVolumeClaim:
          claimName: "{{ include "modelix.fullname" . }}-db-data"
      {{- include "modelix.pullSecret" . | nindent 6 }}
      restartPolicy: Always
{{- end }}