{{- if .Values.workspaces.enabled  -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: workspace-client
    {{- include "modelix.labels" . | nindent 4 }}
  name: "{{ include "modelix.fullname" . }}-workspace-client"
spec:
  revisionHistoryLimit: 5
  replicas: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      component: workspace-client
      {{- include "modelix.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        component: workspace-client
        {{- include "modelix.selectorLabels" . | nindent 8 }}
    spec:
      tolerations:
        - key: "workspace-client"
          operator: "Exists"
          effect: "NoExecute"
      containers:
      - name: workspace-client
        image: "{{ .Values.dockerProxy.prefix }}modelix/modelix-workspace-client:{{ .Values.imageTags.wsClient | default .Values.versions.modelix.workspaces }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: "modelix_executionMode"
          value: "PROJECTOR"
        - name: "modelix_workspace_server"
          value: "http://{{ include "modelix.fullname" . }}-workspace-manager:28104/"
        - name: MODEL_URI
          value: "http://{{ include "modelix.fullname" . }}-model:28101/"
        ports:
        - name: "projector"
          containerPort: 8887
        - name: "jvmdebug"
          containerPort: 5071
        - name: "yourkit"
          containerPort: 10001
        - name: "diff"
          containerPort: 33334
        - name: "generator"
          containerPort: 33335
        {{- range $index, $port := .Values.workspaces.client.customExposedPorts }}
        - name: "custom-port-{{ $index }}"
          containerPort: {{ $port }}
        {{- end }}
        resources:
          requests:
            memory: "4.0Gi" # is replaced with the value in the workspace configuration
            cpu: 500m
          limits:
            memory: "4.0Gi" # is replaced with the value in the workspace configuration
            cpu: "1.5"
        # 8887 is the port used to access the MPS UI.
        # http://localhost:8887/mainWindows can be used to list opened windows.
        # See https://github.com/JetBrains/projector-client/blob/0f1e08a68f01c417a7ce8a58afe77d63603e22db/projector-server-core/src/main/kotlin/org/jetbrains/projector/server/core/websocket/HttpWsServer.kt#L68
        # The response is single line of JSON.
        # Example responses values are:
        # * `[]`, when no windows are opened yet
        # * `[{"title":"splash","pngBase64Icon":null}]`, when the splash screen is loading
        # * `[{"title":"<projectName>","pngBase64Icon":"iVB<...>YII="}]`, when one project is opened
        #
        # With the different probes, we make sure to only redirect the user to the UI when MPS started.
        # Use `wget` because `curl` does not exist in container.
        startupProbe:
          exec:
            command: ["/bin/sh", "-c", "wget -qO- http://localhost:8887/mainWindows | grep -vqF '[]'"]
          # Give MPS and projector 2 minutes (12 * 10 seconds) to startup.
          failureThreshold: 12
          periodSeconds: 10
        livenessProbe:
          exec:
            command: ["/bin/sh", "-c", "wget -qO- http://localhost:8887/mainWindows | grep -vqF '[]'"]
          periodSeconds: 20
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command: ["/bin/sh", "-c", "wget -qO- http://localhost:8887/mainWindows | grep -vqF '[]'"]
          periodSeconds: 5
          timeoutSeconds: 3
      restartPolicy: Always
      {{- include "modelix.pullSecret" . | nindent 6 }}
{{- end -}}