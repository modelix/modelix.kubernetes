{{- if .Values.workspaces.enabled  -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: workspace-manager
    {{- include "modelix.labels" . | nindent 4 }}
  name: "{{ include "modelix.fullname" . }}-workspace-manager"
spec:
  revisionHistoryLimit: 5
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      component: workspace-manager
      {{- include "modelix.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        component: workspace-manager
        {{- include "modelix.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: "{{ include "modelix.serviceAccountName" . }}"
      containers:
      - env:
          - name: model_server_url
            value: http://{{ include "modelix.fullname" . }}-model:28101/
          - name: "KUBERNETES_NAMESPACE"
            value: {{ .Release.Namespace }}
          - name: "WORKSPACE_JOB_IMAGE_NAME"
            value: "{{ .Values.dockerProxy.prefix }}modelix/modelix-workspace-job"
          - name: "WORKSPACE_JOB_IMAGE_VERSION"
            value: "{{ .Values.imageTags.wsJob | default .Values.versions.modelix.workspaces | default .Chart.AppVersion }}"
          - name: "KUBERNETES_PREFIX"
            value: "{{ include "modelix.fullname" . }}-"
          - name: MODELIX_MAX_BODY_SIZE
            value: "{{ .Values.maxBodySize }}"
          - name: "MODELIX_JWK_FILE_WORKSPACE_MANAGER"
            value: /secrets/jwk/wsmanager/private.pem
          - name: "MODELIX_JWK_FILE_INSTANCES_MANAGER"
            value: /secrets/jwk/instancesmanager/instances-manager-public.pem
          - name: MPS_BASEIMAGE_VERSION
            value: {{ .Values.versions.modelix.vncBaseImage }}
          - name: MPS_BASEIMAGE_NAME
            value: "{{ .Values.dockerProxy.prefix }}modelix/mps-vnc-baseimage"
          - name: DOCKER_REGISTRY_SERVICE_NAME
            value: "{{ include "modelix.fullname" . }}-docker-registry"
          {{- if .Values.dockerProxy.secret64 }}
          - name: DOCKER_CONFIG_SECRET_NAME
            value: "{{ include "modelix.fullname" . }}-docker-secret"
          {{- end }}
          - name: DOCKER_CONFIG_INTERN_REGISTRY_SECRET_NAME
            value: "{{ include "modelix.fullname" . }}-docker-registry-secret"
          {{- include "modelix.authorizationConfig" . | nindent 10 }}
        image: "{{ .Values.dockerProxy.prefix }}modelix/modelix-workspace-manager:{{ .Values.imageTags.wsManager | default .Values.versions.modelix.workspaces }}"
        imagePullPolicy: IfNotPresent
        name: workspace-manager
        ports:
        - containerPort: 28104
          name: "http"
        - containerPort: 5071
          name: "jvm-debug"
        resources: 
          requests:
            memory: "{{ .Values.workspaces.manager.memory | default "600Mi" }}"
            cpu: "0.1"
          limits:
            memory: "{{ .Values.workspaces.manager.memory | default "600Mi" }}"
            cpu: "1.0"
        readinessProbe:
          httpGet:
            path: /health
            port: 28104
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 28104
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
        volumeMounts:
          - mountPath: "/workspace-manager/modelix-workspaces/uploads"
            name: "{{ include "modelix.fullname" . }}-workspace-uploads"
          - mountPath: "/workspace-manager/config"
            name: "{{ include "modelix.fullname" . }}-workspace-config"
          - name: "{{ include "modelix.fullname" . }}-workspace-secret"
            mountPath: /secrets/workspacesecret
            readOnly: true
          - name: "{{ include "modelix.fullname" . }}-workspace-manager-rsa-keys"
            mountPath: /secrets/jwk/wsmanager
            readOnly: true
          - name: "{{ include "modelix.fullname" . }}-instances-manager-rsa-keys"
            mountPath: /secrets/jwk/instancesmanager
            readOnly: true
      restartPolicy: Always
      volumes:
        - name: "{{ include "modelix.fullname" . }}-workspace-uploads"
          persistentVolumeClaim:
            claimName: "{{ include "modelix.fullname" . }}-workspace-uploads"
        - name: "{{ include "modelix.fullname" . }}-workspace-config"
          persistentVolumeClaim:
            claimName: "{{ include "modelix.fullname" . }}-workspace-config"
        - name: "{{ include "modelix.fullname" . }}-workspace-secret"
          secret:
            secretName: "{{ include "modelix.fullname" . }}-workspace-secret"
            items:
              - key: workspace-secret
                path: workspace-credentials-key.txt
        - name: "{{ include "modelix.fullname" . }}-workspace-manager-rsa-keys"
          secret:
            secretName: "{{ include "modelix.fullname" . }}-workspace-manager-rsa-keys"
            items:
              - key: private
                path: private.pem
        - name: "{{ include "modelix.fullname" . }}-instances-manager-rsa-keys"
          secret:
            secretName: "{{ include "modelix.fullname" . }}-instances-manager-rsa-keys"
            items:
              - key: public
                path: instances-manager-public.pem
      {{- include "modelix.pullSecret" . | nindent 6 }}
{{- end -}}
