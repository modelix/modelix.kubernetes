apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: docker-registry
    {{- include "modelix.labels" . | nindent 4 }}
  name: "{{ include "modelix.fullname" . }}-docker-registry"
spec:
  revisionHistoryLimit: 5
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      component: docker-registry
      {{- include "modelix.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        component: docker-registry
        {{- include "modelix.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - image: "{{ .Values.dockerProxy.prefix }}{{ .Values.dockerRegistry.image.repository }}:{{ .Values.dockerRegistry.image.tag }}"
          imagePullPolicy: {{ .Values.dockerRegistry.image.pullPolicy }}
          name: docker-registry
          ports:
            - containerPort: 5000
          env:
            - name: REGISTRY_AUTH
              value: "htpasswd"
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: "Registry Realm"
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: "/auth/htpasswd"
          resources:
            requests:
              memory: "800Mi"
              cpu: "0.1"
            limits:
              memory: "800Mi"
              cpu: "1.0"
          volumeMounts:
            - name: "docker-registry-secret"
              mountPath: "/auth"
              readOnly: true
      volumes:
        - name: "docker-registry-secret"
          secret:
            secretName: "{{ include "modelix.fullname" . }}-docker-registry-secret"
            items:
              - key: htpasswd
                path: htpasswd
      restartPolicy: Always
      {{- include "modelix.pullSecret" . | nindent 6 }}
