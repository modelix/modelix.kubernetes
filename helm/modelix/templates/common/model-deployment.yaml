apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: model
    {{- include "modelix.labels" . | nindent 4 }}
  name: "{{ include "modelix.fullname" . }}-model"
spec:
  revisionHistoryLimit: 5
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      component: model
      {{- include "modelix.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        component: model
        {{- include "modelix.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - env:
            - name: MODELIX_JDBC_URL
              value: jdbc:postgresql://{{ include "modelix.fullname" . }}-db:5432/
            - name: MODELIX_JDBC_USER
              value: modelix
            - name: MODELIX_JDBC_PW
              value: modelix
            - name: MODELIX_JDBC_SCHEMA
              value: modelix
            - name: "MODELIX_JWK_FILE_WORKSPACE_MANAGER"
              value: /secrets/jwk/wsmanager/workspace-manager-public.pem
            - name: "MODELIX_JWK_FILE_INSTANCES_MANAGER"
              value: /secrets/jwk/instancesmanager/instances-manager-public.pem
            - name: MODELIX_AUTHORIZATION_URI
              value: "{{ include "modelix.externalKeycloakUrl" . }}realms/{{ .Values.keycloak.realm }}/protocol/openid-connect/auth"
            - name: MODELIX_TOKEN_URI
              value: "{{ include "modelix.externalKeycloakUrl" . }}realms/{{ .Values.keycloak.realm }}/protocol/openid-connect/token"
            - name: MODELIX_PERMISSION_CHECKS_ENABLED
              value: "true"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:+PrintFlagsFinal -Xms1000m -Xmx1000m"
            {{- include "modelix.authorizationConfig" . | nindent 12 }}
          image: "{{ .Values.dockerProxy.prefix }}{{.Values.modelServer.image.repository}}:{{ .Values.modelServer.image.tag }}"
          imagePullPolicy: {{.Values.modelServer.image.pullPolicy}}
          name: model
          ports:
            - containerPort: 28101
            - containerPort: 5071
              name: "jvm-debug"
          resources:
            requests:
              memory: "2000Mi"
              cpu: "0.1"
            limits:
              memory: "2000Mi"
              cpu: "1.0"
          readinessProbe:
            httpGet:
              path: /health
              port: 28101
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 28101
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 10
          volumeMounts:
            - name: "{{ include "modelix.fullname" . }}-workspace-manager-rsa-keys"
              mountPath: /secrets/jwk/wsmanager
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: "{{ include "modelix.fullname" . }}-workspace-manager-rsa-keys"
          secret:
            secretName: "{{ include "modelix.fullname" . }}-workspace-manager-rsa-keys"
            items:
              - key: public
                path: workspace-manager-public.pem
      {{- include "modelix.pullSecret" . | nindent 6 }}
